{
	"id": 0,
	"name": "Qewd",
	"kind": 0,
	"flags": {},
	"originalName": "",
	"children": [
		{
			"id": 362,
			"name": "Test",
			"kind": 4,
			"kindString": "Enumeration",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "src/Utils/Constants/ModalEnum.ts",
					"line": 1,
					"character": 16
				}
			]
		},
		{
			"id": 227,
			"name": "App",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 228,
					"name": "App",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"type": {
						"type": "reference",
						"name": "Element"
					}
				}
			],
			"children": [
				{
					"id": 274,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 275,
							"name": "new App",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 276,
									"name": "props",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"name": "Props"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 227,
								"name": "App"
							},
							"overwrites": {
								"type": "reference",
								"id": 119,
								"name": "Component.__constructor"
							}
						}
					],
					"sources": [
						{
							"fileName": "App.tsx",
							"line": 11,
							"character": 64
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 119,
						"name": "Component.__constructor"
					}
				},
				{
					"id": 324,
					"name": "context",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "If using the new style context, re-declare this in your class to be the\n`React.ContextType` of your `static contextType`.\nShould be used with type annotation or static contextType.",
						"text": "```ts\nstatic contextType = MyContext\n// For TS pre-3.7:\ncontext!: React.ContextType<typeof MyContext>\n// For TS 3.7 and above:\ndeclare context: React.ContextType<typeof MyContext>\n```\n",
						"tags": [
							{
								"tag": "see",
								"text": "https://reactjs.org/docs/context.html\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 476,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 118,
						"name": "Component.context"
					}
				},
				{
					"id": 341,
					"name": "props",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 501,
							"character": 22
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Props"
									}
								],
								"name": "Readonly"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 342,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 343,
													"name": "children",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/react/index.d.ts",
															"line": 501,
															"character": 57
														}
													],
													"type": {
														"type": "reference",
														"name": "ReactNode"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														343
													]
												}
											],
											"sources": [
												{
													"fileName": "node_modules/@types/react/index.d.ts",
													"line": 501,
													"character": 47
												}
											]
										}
									}
								],
								"name": "Readonly"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 141,
						"name": "Component.props"
					}
				},
				{
					"id": 345,
					"name": "refs",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"tags": [
							{
								"tag": "deprecated",
								"text": "\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 507,
							"character": 12
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 346,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"indexSignature": [
								{
									"id": 347,
									"name": "__index",
									"kind": 8192,
									"kindString": "Index signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 348,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ReactInstance"
									}
								}
							],
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 507,
									"character": 13
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 145,
						"name": "Component.refs"
					}
				},
				{
					"id": 344,
					"name": "state",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 502,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "State"
							}
						],
						"name": "Readonly"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 144,
						"name": "Component.state"
					}
				},
				{
					"id": 323,
					"name": "contextType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "If set, `this.context` will be set at runtime to the current value of the given Context.",
						"text": "Usage:\n\n```ts\ntype MyContext = number\nconst Ctx = React.createContext<MyContext>(0)\n\nclass Foo extends React.Component {\n  static contextType = Ctx\n  context!: React.ContextType<typeof Ctx>\n  render () {\n    return <>My context's value: {this.context}</>;\n  }\n}\n```\n",
						"tags": [
							{
								"tag": "see",
								"text": "https://reactjs.org/docs/context.html#classcontexttype\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 458,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Context"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 117,
						"name": "Component.contextType"
					}
				},
				{
					"id": 303,
					"name": "UNSAFE_componentWillMount",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"signatures": [
						{
							"id": 304,
							"name": "UNSAFE_componentWillMount",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
								"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
								"tags": [
									{
										"tag": "deprecated",
										"text": "16.3, use componentDidMount or the constructor instead"
									},
									{
										"tag": "see",
										"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
									},
									{
										"tag": "see",
										"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 97,
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 712,
							"character": 33
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 97,
						"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
					}
				},
				{
					"id": 309,
					"name": "UNSAFE_componentWillReceiveProps",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"signatures": [
						{
							"id": 310,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
								"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
								"tags": [
									{
										"tag": "deprecated",
										"text": "16.3, use static getDerivedStateFromProps instead"
									},
									{
										"tag": "see",
										"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
									},
									{
										"tag": "see",
										"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
									}
								]
							},
							"parameters": [
								{
									"id": 311,
									"name": "nextProps",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Props"
											}
										],
										"name": "Readonly"
									}
								},
								{
									"id": 312,
									"name": "nextContext",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 103,
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 744,
							"character": 40
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 103,
						"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
					}
				},
				{
					"id": 318,
					"name": "UNSAFE_componentWillUpdate",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"signatures": [
						{
							"id": 319,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
								"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
								"tags": [
									{
										"tag": "deprecated",
										"text": "16.3, use getSnapshotBeforeUpdate instead"
									},
									{
										"tag": "see",
										"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
									},
									{
										"tag": "see",
										"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
									}
								]
							},
							"parameters": [
								{
									"id": 320,
									"name": "nextProps",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Props"
											}
										],
										"name": "Readonly"
									}
								},
								{
									"id": 321,
									"name": "nextState",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "State"
											}
										],
										"name": "Readonly"
									}
								},
								{
									"id": 322,
									"name": "nextContext",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 112,
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 772,
							"character": 34
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 112,
						"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
					}
				},
				{
					"id": 288,
					"name": "componentDidCatch",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"signatures": [
						{
							"id": 289,
							"name": "componentDidCatch",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
							},
							"parameters": [
								{
									"id": 290,
									"name": "error",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"name": "Error"
									}
								},
								{
									"id": 291,
									"name": "errorInfo",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"name": "ErrorInfo"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 82,
								"name": "ComponentLifecycle.componentDidCatch"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 641,
							"character": 25
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 82,
						"name": "ComponentLifecycle.componentDidCatch"
					}
				},
				{
					"id": 277,
					"name": "componentDidMount",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 278,
							"name": "componentDidMount",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"id": 155,
								"name": "ComponentLifecycle.componentDidMount"
							}
						}
					],
					"sources": [
						{
							"fileName": "App.tsx",
							"line": 20,
							"character": 19
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 155,
						"name": "ComponentLifecycle.componentDidMount"
					}
				},
				{
					"id": 296,
					"name": "componentDidUpdate",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"signatures": [
						{
							"id": 297,
							"name": "componentDidUpdate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Called immediately after updating occurs. Not called for the initial render.",
								"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
							},
							"parameters": [
								{
									"id": 298,
									"name": "prevProps",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Props"
											}
										],
										"name": "Readonly"
									}
								},
								{
									"id": 299,
									"name": "prevState",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "State"
											}
										],
										"name": "Readonly"
									}
								},
								{
									"id": 300,
									"name": "snapshot",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "SS"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 90,
								"name": "NewLifecycle.componentDidUpdate"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 683,
							"character": 26
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 90,
						"name": "NewLifecycle.componentDidUpdate"
					}
				},
				{
					"id": 301,
					"name": "componentWillMount",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"signatures": [
						{
							"id": 302,
							"name": "componentWillMount",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
								"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
								"tags": [
									{
										"tag": "deprecated",
										"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
									},
									{
										"tag": "see",
										"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
									},
									{
										"tag": "see",
										"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 95,
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 698,
							"character": 26
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 95,
						"name": "DeprecatedLifecycle.componentWillMount"
					}
				},
				{
					"id": 305,
					"name": "componentWillReceiveProps",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"signatures": [
						{
							"id": 306,
							"name": "componentWillReceiveProps",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
								"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
								"tags": [
									{
										"tag": "deprecated",
										"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
									},
									{
										"tag": "see",
										"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
									},
									{
										"tag": "see",
										"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
									}
								]
							},
							"parameters": [
								{
									"id": 307,
									"name": "nextProps",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Props"
											}
										],
										"name": "Readonly"
									}
								},
								{
									"id": 308,
									"name": "nextContext",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 99,
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 727,
							"character": 33
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 99,
						"name": "DeprecatedLifecycle.componentWillReceiveProps"
					}
				},
				{
					"id": 286,
					"name": "componentWillUnmount",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"signatures": [
						{
							"id": 287,
							"name": "componentWillUnmount",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 80,
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 636,
							"character": 28
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 80,
						"name": "ComponentLifecycle.componentWillUnmount"
					}
				},
				{
					"id": 313,
					"name": "componentWillUpdate",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"signatures": [
						{
							"id": 314,
							"name": "componentWillUpdate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
								"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
								"tags": [
									{
										"tag": "deprecated",
										"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
									},
									{
										"tag": "see",
										"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
									},
									{
										"tag": "see",
										"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
									}
								]
							},
							"parameters": [
								{
									"id": 315,
									"name": "nextProps",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Props"
											}
										],
										"name": "Readonly"
									}
								},
								{
									"id": 316,
									"name": "nextState",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "State"
											}
										],
										"name": "Readonly"
									}
								},
								{
									"id": 317,
									"name": "nextContext",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 107,
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 757,
							"character": 27
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 107,
						"name": "DeprecatedLifecycle.componentWillUpdate"
					}
				},
				{
					"id": 336,
					"name": "forceUpdate",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 337,
							"name": "forceUpdate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 338,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 339,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 340,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 136,
								"name": "Component.forceUpdate"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 493,
							"character": 19
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 136,
						"name": "Component.forceUpdate"
					}
				},
				{
					"id": 292,
					"name": "getSnapshotBeforeUpdate",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"signatures": [
						{
							"id": 293,
							"name": "getSnapshotBeforeUpdate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
								"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
							},
							"parameters": [
								{
									"id": 294,
									"name": "prevProps",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Props"
											}
										],
										"name": "Readonly"
									}
								},
								{
									"id": 295,
									"name": "prevState",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "State"
											}
										],
										"name": "Readonly"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 86,
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 677,
							"character": 31
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 86,
						"name": "NewLifecycle.getSnapshotBeforeUpdate"
					}
				},
				{
					"id": 279,
					"name": "render",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 280,
							"name": "render",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"name": "Element"
							},
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						}
					],
					"sources": [
						{
							"fileName": "App.tsx",
							"line": 22,
							"character": 8
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Component.render"
					}
				},
				{
					"id": 325,
					"name": "setState",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 326,
							"name": "setState",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"typeParameter": [
								{
									"id": 327,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"name": "State"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 328,
									"name": "state",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 329,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 330,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExported": true
															},
															"parameters": [
																{
																	"id": 331,
																	"name": "prevState",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExported": true
																	},
																	"type": {
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"name": "State"
																			}
																		],
																		"name": "Readonly"
																	}
																},
																{
																	"id": 332,
																	"name": "props",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExported": true
																	},
																	"type": {
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"name": "Props"
																			}
																		],
																		"name": "Readonly"
																	}
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"name": "State"
																			},
																			{
																				"type": "typeParameter",
																				"name": "K",
																				"constraint": {
																					"type": "typeOperator",
																					"operator": "keyof",
																					"target": {
																						"type": "reference",
																						"name": "State"
																					}
																				}
																			}
																		],
																		"name": "Pick"
																	},
																	{
																		"type": "reference",
																		"name": "State"
																	},
																	{
																		"type": "intrinsic",
																		"name": "null"
																	}
																]
															}
														}
													],
													"sources": [
														{
															"fileName": "node_modules/@types/react/index.d.ts",
															"line": 489,
															"character": 20
														}
													]
												}
											},
											{
												"type": "union",
												"types": [
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"name": "State"
															},
															{
																"type": "typeParameter",
																"name": "K",
																"constraint": {
																	"type": "typeOperator",
																	"operator": "keyof",
																	"target": {
																		"type": "reference",
																		"name": "State"
																	}
																}
															}
														],
														"name": "Pick"
													},
													{
														"type": "reference",
														"name": "State"
													},
													{
														"type": "intrinsic",
														"name": "null"
													}
												]
											}
										]
									}
								},
								{
									"id": 333,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 334,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 335,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 125,
								"name": "Component.setState"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 488,
							"character": 16
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 125,
						"name": "Component.setState"
					}
				},
				{
					"id": 281,
					"name": "shouldComponentUpdate",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"signatures": [
						{
							"id": 282,
							"name": "shouldComponentUpdate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
								"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
							},
							"parameters": [
								{
									"id": 283,
									"name": "nextProps",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Props"
											}
										],
										"name": "Readonly"
									}
								},
								{
									"id": 284,
									"name": "nextState",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "State"
											}
										],
										"name": "Readonly"
									}
								},
								{
									"id": 285,
									"name": "nextContext",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 75,
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 631,
							"character": 29
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 75,
						"name": "ComponentLifecycle.shouldComponentUpdate"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						274
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						324,
						341,
						345,
						344,
						323
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						303,
						309,
						318,
						288,
						277,
						296,
						301,
						305,
						286,
						313,
						336,
						292,
						279,
						325,
						281
					]
				}
			],
			"sources": [
				{
					"fileName": "src/Navigation/Navigation.tsx",
					"line": 12,
					"character": 9
				},
				{
					"fileName": "App.tsx",
					"line": 11,
					"character": 24
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"name": "Props"
						},
						{
							"type": "reference",
							"name": "State"
						}
					],
					"name": "Component"
				}
			]
		},
		{
			"id": 149,
			"name": "Home",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 150,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 151,
							"name": "new Home",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 152,
									"name": "props",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"name": "Props"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 149,
								"name": "Home"
							},
							"overwrites": {
								"type": "reference",
								"id": 119,
								"name": "Component.__constructor"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/Screens/App/Home/Home.tsx",
							"line": 15,
							"character": 65
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 119,
						"name": "Component.__constructor"
					}
				},
				{
					"id": 200,
					"name": "context",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "If using the new style context, re-declare this in your class to be the\n`React.ContextType` of your `static contextType`.\nShould be used with type annotation or static contextType.",
						"text": "```ts\nstatic contextType = MyContext\n// For TS pre-3.7:\ncontext!: React.ContextType<typeof MyContext>\n// For TS 3.7 and above:\ndeclare context: React.ContextType<typeof MyContext>\n```\n",
						"tags": [
							{
								"tag": "see",
								"text": "https://reactjs.org/docs/context.html\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 476,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 118,
						"name": "Component.context"
					}
				},
				{
					"id": 217,
					"name": "props",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 501,
							"character": 22
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Props"
									}
								],
								"name": "Readonly"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 218,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 219,
													"name": "children",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/react/index.d.ts",
															"line": 501,
															"character": 57
														}
													],
													"type": {
														"type": "reference",
														"name": "ReactNode"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														219
													]
												}
											],
											"sources": [
												{
													"fileName": "node_modules/@types/react/index.d.ts",
													"line": 501,
													"character": 47
												}
											]
										}
									}
								],
								"name": "Readonly"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 141,
						"name": "Component.props"
					}
				},
				{
					"id": 221,
					"name": "refs",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"tags": [
							{
								"tag": "deprecated",
								"text": "\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 507,
							"character": 12
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 222,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"indexSignature": [
								{
									"id": 223,
									"name": "__index",
									"kind": 8192,
									"kindString": "Index signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 224,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ReactInstance"
									}
								}
							],
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 507,
									"character": 13
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 145,
						"name": "Component.refs"
					}
				},
				{
					"id": 220,
					"name": "state",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 502,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "State"
							}
						],
						"name": "Readonly"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 144,
						"name": "Component.state"
					}
				},
				{
					"id": 199,
					"name": "contextType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "If set, `this.context` will be set at runtime to the current value of the given Context.",
						"text": "Usage:\n\n```ts\ntype MyContext = number\nconst Ctx = React.createContext<MyContext>(0)\n\nclass Foo extends React.Component {\n  static contextType = Ctx\n  context!: React.ContextType<typeof Ctx>\n  render () {\n    return <>My context's value: {this.context}</>;\n  }\n}\n```\n",
						"tags": [
							{
								"tag": "see",
								"text": "https://reactjs.org/docs/context.html#classcontexttype\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 458,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Context"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 117,
						"name": "Component.contextType"
					}
				},
				{
					"id": 179,
					"name": "UNSAFE_componentWillMount",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"signatures": [
						{
							"id": 180,
							"name": "UNSAFE_componentWillMount",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
								"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
								"tags": [
									{
										"tag": "deprecated",
										"text": "16.3, use componentDidMount or the constructor instead"
									},
									{
										"tag": "see",
										"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
									},
									{
										"tag": "see",
										"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 97,
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 712,
							"character": 33
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 97,
						"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
					}
				},
				{
					"id": 185,
					"name": "UNSAFE_componentWillReceiveProps",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"signatures": [
						{
							"id": 186,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
								"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
								"tags": [
									{
										"tag": "deprecated",
										"text": "16.3, use static getDerivedStateFromProps instead"
									},
									{
										"tag": "see",
										"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
									},
									{
										"tag": "see",
										"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
									}
								]
							},
							"parameters": [
								{
									"id": 187,
									"name": "nextProps",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Props"
											}
										],
										"name": "Readonly"
									}
								},
								{
									"id": 188,
									"name": "nextContext",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 103,
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 744,
							"character": 40
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 103,
						"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
					}
				},
				{
					"id": 194,
					"name": "UNSAFE_componentWillUpdate",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"signatures": [
						{
							"id": 195,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
								"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
								"tags": [
									{
										"tag": "deprecated",
										"text": "16.3, use getSnapshotBeforeUpdate instead"
									},
									{
										"tag": "see",
										"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
									},
									{
										"tag": "see",
										"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
									}
								]
							},
							"parameters": [
								{
									"id": 196,
									"name": "nextProps",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Props"
											}
										],
										"name": "Readonly"
									}
								},
								{
									"id": 197,
									"name": "nextState",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "State"
											}
										],
										"name": "Readonly"
									}
								},
								{
									"id": 198,
									"name": "nextContext",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 112,
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 772,
							"character": 34
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 112,
						"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
					}
				},
				{
					"id": 164,
					"name": "componentDidCatch",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"signatures": [
						{
							"id": 165,
							"name": "componentDidCatch",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
							},
							"parameters": [
								{
									"id": 166,
									"name": "error",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"name": "Error"
									}
								},
								{
									"id": 167,
									"name": "errorInfo",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"name": "ErrorInfo"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 82,
								"name": "ComponentLifecycle.componentDidCatch"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 641,
							"character": 25
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 82,
						"name": "ComponentLifecycle.componentDidCatch"
					}
				},
				{
					"id": 155,
					"name": "componentDidMount",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"signatures": [
						{
							"id": 156,
							"name": "componentDidMount",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Called immediately after a component is mounted. Setting state here will trigger re-rendering."
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 155,
								"name": "ComponentLifecycle.componentDidMount"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 620,
							"character": 25
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 155,
						"name": "ComponentLifecycle.componentDidMount"
					}
				},
				{
					"id": 172,
					"name": "componentDidUpdate",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"signatures": [
						{
							"id": 173,
							"name": "componentDidUpdate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Called immediately after updating occurs. Not called for the initial render.",
								"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
							},
							"parameters": [
								{
									"id": 174,
									"name": "prevProps",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Props"
											}
										],
										"name": "Readonly"
									}
								},
								{
									"id": 175,
									"name": "prevState",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "State"
											}
										],
										"name": "Readonly"
									}
								},
								{
									"id": 176,
									"name": "snapshot",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "SS"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 90,
								"name": "NewLifecycle.componentDidUpdate"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 683,
							"character": 26
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 90,
						"name": "NewLifecycle.componentDidUpdate"
					}
				},
				{
					"id": 177,
					"name": "componentWillMount",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"signatures": [
						{
							"id": 178,
							"name": "componentWillMount",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
								"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
								"tags": [
									{
										"tag": "deprecated",
										"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
									},
									{
										"tag": "see",
										"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
									},
									{
										"tag": "see",
										"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 95,
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 698,
							"character": 26
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 95,
						"name": "DeprecatedLifecycle.componentWillMount"
					}
				},
				{
					"id": 181,
					"name": "componentWillReceiveProps",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"signatures": [
						{
							"id": 182,
							"name": "componentWillReceiveProps",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
								"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
								"tags": [
									{
										"tag": "deprecated",
										"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
									},
									{
										"tag": "see",
										"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
									},
									{
										"tag": "see",
										"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
									}
								]
							},
							"parameters": [
								{
									"id": 183,
									"name": "nextProps",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Props"
											}
										],
										"name": "Readonly"
									}
								},
								{
									"id": 184,
									"name": "nextContext",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 99,
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 727,
							"character": 33
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 99,
						"name": "DeprecatedLifecycle.componentWillReceiveProps"
					}
				},
				{
					"id": 162,
					"name": "componentWillUnmount",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"signatures": [
						{
							"id": 163,
							"name": "componentWillUnmount",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 80,
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 636,
							"character": 28
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 80,
						"name": "ComponentLifecycle.componentWillUnmount"
					}
				},
				{
					"id": 189,
					"name": "componentWillUpdate",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"signatures": [
						{
							"id": 190,
							"name": "componentWillUpdate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
								"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
								"tags": [
									{
										"tag": "deprecated",
										"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
									},
									{
										"tag": "see",
										"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
									},
									{
										"tag": "see",
										"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
									}
								]
							},
							"parameters": [
								{
									"id": 191,
									"name": "nextProps",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Props"
											}
										],
										"name": "Readonly"
									}
								},
								{
									"id": 192,
									"name": "nextState",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "State"
											}
										],
										"name": "Readonly"
									}
								},
								{
									"id": 193,
									"name": "nextContext",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 107,
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 757,
							"character": 27
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 107,
						"name": "DeprecatedLifecycle.componentWillUpdate"
					}
				},
				{
					"id": 212,
					"name": "forceUpdate",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 213,
							"name": "forceUpdate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 214,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 215,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 216,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 136,
								"name": "Component.forceUpdate"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 493,
							"character": 19
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 136,
						"name": "Component.forceUpdate"
					}
				},
				{
					"id": 168,
					"name": "getSnapshotBeforeUpdate",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"signatures": [
						{
							"id": 169,
							"name": "getSnapshotBeforeUpdate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
								"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
							},
							"parameters": [
								{
									"id": 170,
									"name": "prevProps",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Props"
											}
										],
										"name": "Readonly"
									}
								},
								{
									"id": 171,
									"name": "prevState",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "State"
											}
										],
										"name": "Readonly"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 86,
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 677,
							"character": 31
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 86,
						"name": "NewLifecycle.getSnapshotBeforeUpdate"
					}
				},
				{
					"id": 153,
					"name": "render",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 154,
							"name": "render",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"name": "Element"
							},
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/Screens/App/Home/Home.tsx",
							"line": 22,
							"character": 8
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Component.render"
					}
				},
				{
					"id": 201,
					"name": "setState",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 202,
							"name": "setState",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"typeParameter": [
								{
									"id": 203,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"name": "State"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 204,
									"name": "state",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 205,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 206,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExported": true
															},
															"parameters": [
																{
																	"id": 207,
																	"name": "prevState",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExported": true
																	},
																	"type": {
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"name": "State"
																			}
																		],
																		"name": "Readonly"
																	}
																},
																{
																	"id": 208,
																	"name": "props",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExported": true
																	},
																	"type": {
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"name": "Props"
																			}
																		],
																		"name": "Readonly"
																	}
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"name": "State"
																			},
																			{
																				"type": "typeParameter",
																				"name": "K",
																				"constraint": {
																					"type": "typeOperator",
																					"operator": "keyof",
																					"target": {
																						"type": "reference",
																						"name": "State"
																					}
																				}
																			}
																		],
																		"name": "Pick"
																	},
																	{
																		"type": "reference",
																		"name": "State"
																	},
																	{
																		"type": "intrinsic",
																		"name": "null"
																	}
																]
															}
														}
													],
													"sources": [
														{
															"fileName": "node_modules/@types/react/index.d.ts",
															"line": 489,
															"character": 20
														}
													]
												}
											},
											{
												"type": "union",
												"types": [
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"name": "State"
															},
															{
																"type": "typeParameter",
																"name": "K",
																"constraint": {
																	"type": "typeOperator",
																	"operator": "keyof",
																	"target": {
																		"type": "reference",
																		"name": "State"
																	}
																}
															}
														],
														"name": "Pick"
													},
													{
														"type": "reference",
														"name": "State"
													},
													{
														"type": "intrinsic",
														"name": "null"
													}
												]
											}
										]
									}
								},
								{
									"id": 209,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 210,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 211,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 125,
								"name": "Component.setState"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 488,
							"character": 16
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 125,
						"name": "Component.setState"
					}
				},
				{
					"id": 157,
					"name": "shouldComponentUpdate",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"signatures": [
						{
							"id": 158,
							"name": "shouldComponentUpdate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
								"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
							},
							"parameters": [
								{
									"id": 159,
									"name": "nextProps",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Props"
											}
										],
										"name": "Readonly"
									}
								},
								{
									"id": 160,
									"name": "nextState",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "State"
											}
										],
										"name": "Readonly"
									}
								},
								{
									"id": 161,
									"name": "nextContext",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 75,
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 631,
							"character": 29
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 75,
						"name": "ComponentLifecycle.shouldComponentUpdate"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						150
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						200,
						217,
						221,
						220,
						199
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						179,
						185,
						194,
						164,
						155,
						172,
						177,
						181,
						162,
						189,
						212,
						168,
						153,
						201,
						157
					]
				}
			],
			"sources": [
				{
					"fileName": "src/Screens/App/Home/Home.tsx",
					"line": 15,
					"character": 25
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"name": "Props"
						},
						{
							"type": "reference",
							"name": "State"
						}
					],
					"name": "Component"
				}
			]
		},
		{
			"id": 68,
			"name": "SplashScreen",
			"kind": 128,
			"kindString": "Class",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 119,
					"name": "constructor",
					"kind": 512,
					"kindString": "Constructor",
					"flags": {
						"isExported": true
					},
					"comment": {
						"tags": [
							{
								"tag": "deprecated",
								"text": ""
							},
							{
								"tag": "see",
								"text": "https://reactjs.org/docs/legacy-context.html\n"
							}
						]
					},
					"signatures": [
						{
							"id": 120,
							"name": "new SplashScreen",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": ""
									},
									{
										"tag": "see",
										"text": "https://reactjs.org/docs/legacy-context.html\n"
									}
								]
							},
							"parameters": [
								{
									"id": 121,
									"name": "props",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 64,
												"name": "Props"
											}
										],
										"name": "Readonly"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 68,
								"name": "SplashScreen"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 119,
								"name": "Component.__constructor"
							}
						},
						{
							"id": 122,
							"name": "new SplashScreen",
							"kind": 16384,
							"kindString": "Constructor signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"tags": [
									{
										"tag": "deprecated",
										"text": ""
									},
									{
										"tag": "see",
										"text": "https://reactjs.org/docs/legacy-context.html\n"
									}
								]
							},
							"parameters": [
								{
									"id": 123,
									"name": "props",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 64,
										"name": "Props"
									}
								},
								{
									"id": 124,
									"name": "context",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"id": 68,
								"name": "SplashScreen"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 119,
								"name": "Component.__constructor"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 476,
							"character": 21
						},
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 478,
							"character": 40
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 119,
						"name": "Component.__constructor"
					}
				},
				{
					"id": 118,
					"name": "context",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "If using the new style context, re-declare this in your class to be the\n`React.ContextType` of your `static contextType`.\nShould be used with type annotation or static contextType.",
						"text": "```ts\nstatic contextType = MyContext\n// For TS pre-3.7:\ncontext!: React.ContextType<typeof MyContext>\n// For TS 3.7 and above:\ndeclare context: React.ContextType<typeof MyContext>\n```\n",
						"tags": [
							{
								"tag": "see",
								"text": "https://reactjs.org/docs/context.html\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 476,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 118,
						"name": "Component.context"
					}
				},
				{
					"id": 141,
					"name": "props",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 501,
							"character": 22
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 64,
										"name": "Props"
									}
								],
								"name": "Readonly"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 142,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 143,
													"name": "children",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "node_modules/@types/react/index.d.ts",
															"line": 501,
															"character": 57
														}
													],
													"type": {
														"type": "reference",
														"name": "ReactNode"
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														143
													]
												}
											],
											"sources": [
												{
													"fileName": "node_modules/@types/react/index.d.ts",
													"line": 501,
													"character": 47
												}
											]
										}
									}
								],
								"name": "Readonly"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 141,
						"name": "Component.props"
					}
				},
				{
					"id": 145,
					"name": "refs",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"tags": [
							{
								"tag": "deprecated",
								"text": "\nhttps://reactjs.org/docs/refs-and-the-dom.html#legacy-api-string-refs\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 507,
							"character": 12
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 146,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"indexSignature": [
								{
									"id": 147,
									"name": "__index",
									"kind": 8192,
									"kindString": "Index signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 148,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ReactInstance"
									}
								}
							],
							"sources": [
								{
									"fileName": "node_modules/@types/react/index.d.ts",
									"line": 507,
									"character": 13
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 145,
						"name": "Component.refs"
					}
				},
				{
					"id": 144,
					"name": "state",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 502,
							"character": 13
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 67,
								"name": "State"
							}
						],
						"name": "Readonly"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 144,
						"name": "Component.state"
					}
				},
				{
					"id": 117,
					"name": "contextType",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isStatic": true,
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "If set, `this.context` will be set at runtime to the current value of the given Context.",
						"text": "Usage:\n\n```ts\ntype MyContext = number\nconst Ctx = React.createContext<MyContext>(0)\n\nclass Foo extends React.Component {\n  static contextType = Ctx\n  context!: React.ContextType<typeof Ctx>\n  render () {\n    return <>My context's value: {this.context}</>;\n  }\n}\n```\n",
						"tags": [
							{
								"tag": "see",
								"text": "https://reactjs.org/docs/context.html#classcontexttype\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 458,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Context"
					},
					"inheritedFrom": {
						"type": "reference",
						"id": 117,
						"name": "Component.contextType"
					}
				},
				{
					"id": 97,
					"name": "UNSAFE_componentWillMount",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"signatures": [
						{
							"id": 98,
							"name": "UNSAFE_componentWillMount",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
								"text": "This method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
								"tags": [
									{
										"tag": "deprecated",
										"text": "16.3, use componentDidMount or the constructor instead"
									},
									{
										"tag": "see",
										"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
									},
									{
										"tag": "see",
										"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 97,
								"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 712,
							"character": 33
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 97,
						"name": "DeprecatedLifecycle.UNSAFE_componentWillMount"
					}
				},
				{
					"id": 103,
					"name": "UNSAFE_componentWillReceiveProps",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"signatures": [
						{
							"id": 104,
							"name": "UNSAFE_componentWillReceiveProps",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
								"text": "Calling `Component#setState` generally does not trigger this method.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
								"tags": [
									{
										"tag": "deprecated",
										"text": "16.3, use static getDerivedStateFromProps instead"
									},
									{
										"tag": "see",
										"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
									},
									{
										"tag": "see",
										"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
									}
								]
							},
							"parameters": [
								{
									"id": 105,
									"name": "nextProps",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 64,
												"name": "Props"
											}
										],
										"name": "Readonly"
									}
								},
								{
									"id": 106,
									"name": "nextContext",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 103,
								"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 744,
							"character": 40
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 103,
						"name": "DeprecatedLifecycle.UNSAFE_componentWillReceiveProps"
					}
				},
				{
					"id": 112,
					"name": "UNSAFE_componentWillUpdate",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"signatures": [
						{
							"id": 113,
							"name": "UNSAFE_componentWillUpdate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
								"text": "Note: You cannot call `Component#setState` here.\n\nThis method will not stop working in React 17.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
								"tags": [
									{
										"tag": "deprecated",
										"text": "16.3, use getSnapshotBeforeUpdate instead"
									},
									{
										"tag": "see",
										"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
									},
									{
										"tag": "see",
										"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
									}
								]
							},
							"parameters": [
								{
									"id": 114,
									"name": "nextProps",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 64,
												"name": "Props"
											}
										],
										"name": "Readonly"
									}
								},
								{
									"id": 115,
									"name": "nextState",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 67,
												"name": "State"
											}
										],
										"name": "Readonly"
									}
								},
								{
									"id": 116,
									"name": "nextContext",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 112,
								"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 772,
							"character": 34
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 112,
						"name": "DeprecatedLifecycle.UNSAFE_componentWillUpdate"
					}
				},
				{
					"id": 71,
					"name": "checkUserAndRedirect",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 72,
							"name": "checkUserAndRedirect",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/Screens/SplashScreen/SplashScreen.tsx",
							"line": 24,
							"character": 22
						}
					]
				},
				{
					"id": 82,
					"name": "componentDidCatch",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"signatures": [
						{
							"id": 83,
							"name": "componentDidCatch",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Catches exceptions generated in descendant components. Unhandled exceptions will cause\nthe entire component tree to unmount."
							},
							"parameters": [
								{
									"id": 84,
									"name": "error",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"name": "Error"
									}
								},
								{
									"id": 85,
									"name": "errorInfo",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"name": "ErrorInfo"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 82,
								"name": "ComponentLifecycle.componentDidCatch"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 641,
							"character": 25
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 82,
						"name": "ComponentLifecycle.componentDidCatch"
					}
				},
				{
					"id": 69,
					"name": "componentDidMount",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 70,
							"name": "componentDidMount",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"overwrites": {
								"type": "reference",
								"id": 155,
								"name": "ComponentLifecycle.componentDidMount"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/Screens/SplashScreen/SplashScreen.tsx",
							"line": 18,
							"character": 19
						}
					],
					"overwrites": {
						"type": "reference",
						"id": 155,
						"name": "ComponentLifecycle.componentDidMount"
					}
				},
				{
					"id": 90,
					"name": "componentDidUpdate",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"signatures": [
						{
							"id": 91,
							"name": "componentDidUpdate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Called immediately after updating occurs. Not called for the initial render.",
								"text": "The snapshot is only present if getSnapshotBeforeUpdate is present and returns non-null.\n"
							},
							"parameters": [
								{
									"id": 92,
									"name": "prevProps",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 64,
												"name": "Props"
											}
										],
										"name": "Readonly"
									}
								},
								{
									"id": 93,
									"name": "prevState",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 67,
												"name": "State"
											}
										],
										"name": "Readonly"
									}
								},
								{
									"id": 94,
									"name": "snapshot",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "SS"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 90,
								"name": "NewLifecycle.componentDidUpdate"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 683,
							"character": 26
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 90,
						"name": "NewLifecycle.componentDidUpdate"
					}
				},
				{
					"id": 95,
					"name": "componentWillMount",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"signatures": [
						{
							"id": 96,
							"name": "componentWillMount",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Called immediately before mounting occurs, and before `Component#render`.\nAvoid introducing any side-effects or subscriptions in this method.",
								"text": "Note: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
								"tags": [
									{
										"tag": "deprecated",
										"text": "16.3, use componentDidMount or the constructor instead; will stop working in React 17"
									},
									{
										"tag": "see",
										"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#initializing-state"
									},
									{
										"tag": "see",
										"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 95,
								"name": "DeprecatedLifecycle.componentWillMount"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 698,
							"character": 26
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 95,
						"name": "DeprecatedLifecycle.componentWillMount"
					}
				},
				{
					"id": 99,
					"name": "componentWillReceiveProps",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"signatures": [
						{
							"id": 100,
							"name": "componentWillReceiveProps",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Called when the component may be receiving new props.\nReact may call this even if props have not changed, so be sure to compare new and existing\nprops if you only want to handle changes.",
								"text": "Calling `Component#setState` generally does not trigger this method.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
								"tags": [
									{
										"tag": "deprecated",
										"text": "16.3, use static getDerivedStateFromProps instead; will stop working in React 17"
									},
									{
										"tag": "see",
										"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#updating-state-based-on-props"
									},
									{
										"tag": "see",
										"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
									}
								]
							},
							"parameters": [
								{
									"id": 101,
									"name": "nextProps",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 64,
												"name": "Props"
											}
										],
										"name": "Readonly"
									}
								},
								{
									"id": 102,
									"name": "nextContext",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 99,
								"name": "DeprecatedLifecycle.componentWillReceiveProps"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 727,
							"character": 33
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 99,
						"name": "DeprecatedLifecycle.componentWillReceiveProps"
					}
				},
				{
					"id": 80,
					"name": "componentWillUnmount",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"signatures": [
						{
							"id": 81,
							"name": "componentWillUnmount",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Called immediately before a component is destroyed. Perform any necessary cleanup in this method, such as\ncancelled network requests, or cleaning up any DOM elements created in `componentDidMount`."
							},
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 80,
								"name": "ComponentLifecycle.componentWillUnmount"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 636,
							"character": 28
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 80,
						"name": "ComponentLifecycle.componentWillUnmount"
					}
				},
				{
					"id": 107,
					"name": "componentWillUpdate",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"signatures": [
						{
							"id": 108,
							"name": "componentWillUpdate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Called immediately before rendering when new props or state is received. Not called for the initial render.",
								"text": "Note: You cannot call `Component#setState` here.\n\nNote: the presence of getSnapshotBeforeUpdate or getDerivedStateFromProps\nprevents this from being invoked.\n",
								"tags": [
									{
										"tag": "deprecated",
										"text": "16.3, use getSnapshotBeforeUpdate instead; will stop working in React 17"
									},
									{
										"tag": "see",
										"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#reading-dom-properties-before-an-update"
									},
									{
										"tag": "see",
										"text": "https://reactjs.org/blog/2018/03/27/update-on-async-rendering.html#gradual-migration-path\n"
									}
								]
							},
							"parameters": [
								{
									"id": 109,
									"name": "nextProps",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 64,
												"name": "Props"
											}
										],
										"name": "Readonly"
									}
								},
								{
									"id": 110,
									"name": "nextState",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 67,
												"name": "State"
											}
										],
										"name": "Readonly"
									}
								},
								{
									"id": 111,
									"name": "nextContext",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 107,
								"name": "DeprecatedLifecycle.componentWillUpdate"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 757,
							"character": 27
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 107,
						"name": "DeprecatedLifecycle.componentWillUpdate"
					}
				},
				{
					"id": 136,
					"name": "forceUpdate",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 137,
							"name": "forceUpdate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 138,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 139,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 140,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 136,
								"name": "Component.forceUpdate"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 493,
							"character": 19
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 136,
						"name": "Component.forceUpdate"
					}
				},
				{
					"id": 86,
					"name": "getSnapshotBeforeUpdate",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"signatures": [
						{
							"id": 87,
							"name": "getSnapshotBeforeUpdate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Runs before React applies the result of `render` to the document, and\nreturns an object to be given to componentDidUpdate. Useful for saving\nthings such as scroll position before `render` causes changes to it.",
								"text": "Note: the presence of getSnapshotBeforeUpdate prevents any of the deprecated\nlifecycle events from running.\n"
							},
							"parameters": [
								{
									"id": 88,
									"name": "prevProps",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 64,
												"name": "Props"
											}
										],
										"name": "Readonly"
									}
								},
								{
									"id": 89,
									"name": "prevState",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 67,
												"name": "State"
											}
										],
										"name": "Readonly"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "null"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 86,
								"name": "NewLifecycle.getSnapshotBeforeUpdate"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 677,
							"character": 31
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 86,
						"name": "NewLifecycle.getSnapshotBeforeUpdate"
					}
				},
				{
					"id": 73,
					"name": "render",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 74,
							"name": "render",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "reference",
								"name": "Element"
							},
							"overwrites": {
								"type": "reference",
								"name": "Component.render"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/Screens/SplashScreen/SplashScreen.tsx",
							"line": 29,
							"character": 8
						}
					],
					"overwrites": {
						"type": "reference",
						"name": "Component.render"
					}
				},
				{
					"id": 125,
					"name": "setState",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 126,
							"name": "setState",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"typeParameter": [
								{
									"id": 127,
									"name": "K",
									"kind": 131072,
									"kindString": "Type parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"id": 67,
											"name": "State"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 128,
									"name": "state",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 129,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 130,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExported": true
															},
															"parameters": [
																{
																	"id": 131,
																	"name": "prevState",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExported": true
																	},
																	"type": {
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"id": 67,
																				"name": "State"
																			}
																		],
																		"name": "Readonly"
																	}
																},
																{
																	"id": 132,
																	"name": "props",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isExported": true
																	},
																	"type": {
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"id": 64,
																				"name": "Props"
																			}
																		],
																		"name": "Readonly"
																	}
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"typeArguments": [
																			{
																				"type": "reference",
																				"id": 67,
																				"name": "State"
																			},
																			{
																				"type": "typeParameter",
																				"name": "K",
																				"constraint": {
																					"type": "typeOperator",
																					"operator": "keyof",
																					"target": {
																						"type": "reference",
																						"id": 67,
																						"name": "State"
																					}
																				}
																			}
																		],
																		"name": "Pick"
																	},
																	{
																		"type": "reference",
																		"id": 67,
																		"name": "State"
																	},
																	{
																		"type": "intrinsic",
																		"name": "null"
																	}
																]
															}
														}
													],
													"sources": [
														{
															"fileName": "node_modules/@types/react/index.d.ts",
															"line": 489,
															"character": 20
														}
													]
												}
											},
											{
												"type": "union",
												"types": [
													{
														"type": "reference",
														"typeArguments": [
															{
																"type": "reference",
																"id": 67,
																"name": "State"
															},
															{
																"type": "typeParameter",
																"name": "K",
																"constraint": {
																	"type": "typeOperator",
																	"operator": "keyof",
																	"target": {
																		"type": "reference",
																		"id": 67,
																		"name": "State"
																	}
																}
															}
														],
														"name": "Pick"
													},
													{
														"type": "reference",
														"id": 67,
														"name": "State"
													},
													{
														"type": "intrinsic",
														"name": "null"
													}
												]
											}
										]
									}
								},
								{
									"id": 133,
									"name": "callback",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 134,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {
														"isExported": true
													},
													"signatures": [
														{
															"id": 135,
															"name": "__call",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {
																"isExported": true
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 125,
								"name": "Component.setState"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 488,
							"character": 16
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 125,
						"name": "Component.setState"
					}
				},
				{
					"id": 75,
					"name": "shouldComponentUpdate",
					"kind": 2048,
					"kindString": "Method",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"signatures": [
						{
							"id": 76,
							"name": "shouldComponentUpdate",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Called to determine whether the change in props and state should trigger a re-render.",
								"text": "`Component` always returns true.\n`PureComponent` implements a shallow comparison on props and state and returns true if any\nprops or states have changed.\n\nIf false is returned, `Component#render`, `componentWillUpdate`\nand `componentDidUpdate` will not be called.\n"
							},
							"parameters": [
								{
									"id": 77,
									"name": "nextProps",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 64,
												"name": "Props"
											}
										],
										"name": "Readonly"
									}
								},
								{
									"id": 78,
									"name": "nextState",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"id": 67,
												"name": "State"
											}
										],
										"name": "Readonly"
									}
								},
								{
									"id": 79,
									"name": "nextContext",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"id": 75,
								"name": "ComponentLifecycle.shouldComponentUpdate"
							}
						}
					],
					"sources": [
						{
							"fileName": "node_modules/@types/react/index.d.ts",
							"line": 631,
							"character": 29
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"id": 75,
						"name": "ComponentLifecycle.shouldComponentUpdate"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"kind": 512,
					"children": [
						119
					]
				},
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						118,
						141,
						145,
						144,
						117
					]
				},
				{
					"title": "Methods",
					"kind": 2048,
					"children": [
						97,
						103,
						112,
						71,
						82,
						69,
						90,
						95,
						99,
						80,
						107,
						136,
						86,
						73,
						125,
						75
					]
				}
			],
			"sources": [
				{
					"fileName": "src/Screens/SplashScreen/SplashScreen.tsx",
					"line": 17,
					"character": 33
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"id": 64,
							"name": "Props"
						},
						{
							"type": "reference",
							"id": 67,
							"name": "State"
						}
					],
					"name": "Component"
				}
			]
		},
		{
			"id": 356,
			"name": "Colors",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 357,
					"name": "BackgroundColor",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/Utils/Constants/Colors.ts",
							"line": 2,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						357
					]
				}
			],
			"sources": [
				{
					"fileName": "src/Utils/Constants/Colors.ts",
					"line": 1,
					"character": 23
				}
			]
		},
		{
			"id": 64,
			"name": "Props",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 65,
					"name": "navigation",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/Screens/SplashScreen/SplashScreen.tsx",
							"line": 11,
							"character": 12
						},
						{
							"fileName": "src/Screens/App/Home/Home.tsx",
							"line": 10,
							"character": 12
						}
					],
					"type": {
						"type": "reference",
						"id": 26,
						"name": "HomeNavigationProp"
					}
				},
				{
					"id": 66,
					"name": "route",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/Screens/SplashScreen/SplashScreen.tsx",
							"line": 12,
							"character": 7
						},
						{
							"fileName": "src/Screens/App/Home/Home.tsx",
							"line": 11,
							"character": 7
						}
					],
					"type": {
						"type": "reference",
						"id": 27,
						"name": "HomeRouteProp"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						65,
						66
					]
				}
			],
			"sources": [
				{
					"fileName": "src/Screens/SplashScreen/SplashScreen.tsx",
					"line": 10,
					"character": 22
				},
				{
					"fileName": "src/Screens/App/Home/Home.tsx",
					"line": 9,
					"character": 22
				},
				{
					"fileName": "App.tsx",
					"line": 6,
					"character": 22
				}
			]
		},
		{
			"id": 67,
			"name": "State",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 272,
					"name": "theme",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "App.tsx",
							"line": 8,
							"character": 7
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 273,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "App.tsx",
									"line": 8,
									"character": 8
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						272
					]
				}
			],
			"sources": [
				{
					"fileName": "src/Screens/SplashScreen/SplashScreen.tsx",
					"line": 15,
					"character": 22
				},
				{
					"fileName": "src/Screens/App/Home/Home.tsx",
					"line": 13,
					"character": 22
				},
				{
					"fileName": "App.tsx",
					"line": 7,
					"character": 22
				}
			]
		},
		{
			"id": 231,
			"name": "AppContextType",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "src/Contexts/AppContext.tsx",
					"line": 3,
					"character": 26
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 232,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 233,
							"name": "theme",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/Contexts/AppContext.tsx",
									"line": 4,
									"character": 7
								}
							],
							"type": {
								"type": "reference",
								"name": "Object"
							}
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								233
							]
						}
					],
					"sources": [
						{
							"fileName": "src/Contexts/AppContext.tsx",
							"line": 3,
							"character": 28
						}
					]
				}
			}
		},
		{
			"id": 23,
			"name": "AppStackType",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "src/Navigation/NavigationType.ts",
					"line": 41,
					"character": 24
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 24,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 25,
							"name": "Home",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/Navigation/NavigationType.ts",
									"line": 42,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "undefined"
							}
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								25
							]
						}
					],
					"sources": [
						{
							"fileName": "src/Navigation/NavigationType.ts",
							"line": 41,
							"character": 26
						}
					]
				}
			}
		},
		{
			"id": 6,
			"name": "AuthStackType",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "src/Navigation/NavigationType.ts",
					"line": 12,
					"character": 25
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 7,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 8,
							"name": "Login",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/Navigation/NavigationType.ts",
									"line": 13,
									"character": 7
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 9,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 10,
											"name": "userId",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/Navigation/NavigationType.ts",
													"line": 13,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												10
											]
										}
									],
									"sources": [
										{
											"fileName": "src/Navigation/NavigationType.ts",
											"line": 13,
											"character": 8
										}
									]
								}
							}
						},
						{
							"id": 12,
							"name": "OtpVerification",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/Navigation/NavigationType.ts",
									"line": 15,
									"character": 17
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 13,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 14,
											"name": "cognitoUser",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/Navigation/NavigationType.ts",
													"line": 15,
													"character": 31
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												14
											]
										}
									],
									"sources": [
										{
											"fileName": "src/Navigation/NavigationType.ts",
											"line": 15,
											"character": 18
										}
									]
								}
							}
						},
						{
							"id": 11,
							"name": "SignUp",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/Navigation/NavigationType.ts",
									"line": 14,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "undefined"
							}
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								8,
								12,
								11
							]
						}
					],
					"sources": [
						{
							"fileName": "src/Navigation/NavigationType.ts",
							"line": 12,
							"character": 27
						}
					]
				}
			}
		},
		{
			"id": 26,
			"name": "HomeNavigationProp",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "src/Navigation/NavigationType.ts",
					"line": 45,
					"character": 30
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 23,
								"name": "AppStackType"
							},
							{
								"type": "stringLiteral",
								"value": "Home"
							}
						],
						"name": "StackNavigationProp"
					},
					{
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 1,
								"name": "RootStackType"
							}
						],
						"name": "StackNavigationProp"
					}
				],
				"name": "CompositeNavigationProp"
			}
		},
		{
			"id": 27,
			"name": "HomeRouteProp",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "src/Navigation/NavigationType.ts",
					"line": 49,
					"character": 25
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"id": 23,
						"name": "AppStackType"
					},
					{
						"type": "stringLiteral",
						"value": "Home"
					}
				],
				"name": "RouteProp"
			}
		},
		{
			"id": 17,
			"name": "LoginNavigatorProp",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "src/Navigation/NavigationType.ts",
					"line": 25,
					"character": 30
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"id": 6,
						"name": "AuthStackType"
					},
					{
						"type": "stringLiteral",
						"value": "Login"
					}
				],
				"name": "StackNavigationProp"
			}
		},
		{
			"id": 18,
			"name": "LoginRouteProp",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "src/Navigation/NavigationType.ts",
					"line": 26,
					"character": 26
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"id": 6,
						"name": "AuthStackType"
					},
					{
						"type": "stringLiteral",
						"value": "Login"
					}
				],
				"name": "RouteProp"
			}
		},
		{
			"id": 21,
			"name": "OtpVerificationNavigationProp",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "src/Navigation/NavigationType.ts",
					"line": 31,
					"character": 41
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 6,
								"name": "AuthStackType"
							},
							{
								"type": "stringLiteral",
								"value": "OtpVerification"
							}
						],
						"name": "StackNavigationProp"
					},
					{
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 1,
								"name": "RootStackType"
							}
						],
						"name": "StackNavigationProp"
					}
				],
				"name": "CompositeNavigationProp"
			}
		},
		{
			"id": 22,
			"name": "OtpVerificationRouteProp",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "src/Navigation/NavigationType.ts",
					"line": 35,
					"character": 36
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"id": 6,
						"name": "AuthStackType"
					},
					{
						"type": "stringLiteral",
						"value": "OtpVerification"
					}
				],
				"name": "RouteProp"
			}
		},
		{
			"id": 1,
			"name": "RootStackType",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "src/Navigation/NavigationType.ts",
					"line": 5,
					"character": 25
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 2,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 4,
							"name": "App",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/Navigation/NavigationType.ts",
									"line": 7,
									"character": 5
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "undefined"
							}
						},
						{
							"id": 3,
							"name": "Auth",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/Navigation/NavigationType.ts",
									"line": 6,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "undefined"
							}
						},
						{
							"id": 5,
							"name": "SplashScreen",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/Navigation/NavigationType.ts",
									"line": 8,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "undefined"
							}
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								4,
								3,
								5
							]
						}
					],
					"sources": [
						{
							"fileName": "src/Navigation/NavigationType.ts",
							"line": 5,
							"character": 27
						}
					]
				}
			}
		},
		{
			"id": 19,
			"name": "SignUpNavigatorProp",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "src/Navigation/NavigationType.ts",
					"line": 28,
					"character": 31
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"id": 6,
						"name": "AuthStackType"
					},
					{
						"type": "stringLiteral",
						"value": "SignUp"
					}
				],
				"name": "StackNavigationProp"
			}
		},
		{
			"id": 20,
			"name": "SignUpRouteProp",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "src/Navigation/NavigationType.ts",
					"line": 29,
					"character": 27
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"id": 6,
						"name": "AuthStackType"
					},
					{
						"type": "stringLiteral",
						"value": "SignUp"
					}
				],
				"name": "RouteProp"
			}
		},
		{
			"id": 15,
			"name": "SplashNavigatorProp",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "src/Navigation/NavigationType.ts",
					"line": 19,
					"character": 31
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"id": 1,
						"name": "RootStackType"
					},
					{
						"type": "stringLiteral",
						"value": "SplashScreen"
					}
				],
				"name": "StackNavigationProp"
			}
		},
		{
			"id": 16,
			"name": "SplashRouteProp",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "src/Navigation/NavigationType.ts",
					"line": 23,
					"character": 27
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"id": 1,
						"name": "RootStackType"
					},
					{
						"type": "stringLiteral",
						"value": "SplashScreen"
					}
				],
				"name": "RouteProp"
			}
		},
		{
			"id": 234,
			"name": "AppContext",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/Contexts/AppContext.tsx",
					"line": 7,
					"character": 16
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 231,
								"name": "AppContextType"
							}
						],
						"name": "Partial"
					}
				],
				"name": "Context"
			},
			"defaultValue": "React.createContext<Partial<AppContextType>>({})"
		},
		{
			"id": 225,
			"name": "AppStack",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/Navigation/Navigation.tsx",
					"line": 9,
					"character": 14
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"id": 23,
						"name": "AppStackType"
					},
					{
						"type": "reference",
						"name": "StackNavigationState"
					},
					{
						"type": "reference",
						"name": "StackNavigationOptions"
					},
					{
						"type": "reference",
						"name": "StackNavigationEventMap"
					},
					{
						"type": "reference",
						"name": "StackNavigator"
					}
				],
				"name": "TypedNavigator"
			},
			"defaultValue": "createStackNavigator<AppStackType>()"
		},
		{
			"id": 28,
			"name": "CommonStyle",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/Utils/CommonStyle/CommonStyle.ts",
					"line": 3,
					"character": 17
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 29,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 32,
							"name": "centerContent",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 34,
									"name": "alignContent",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/Utils/CommonStyle/CommonStyle.ts",
											"line": 10,
											"character": 16
										}
									],
									"type": {
										"type": "stringLiteral",
										"value": "center"
									},
									"defaultValue": "\"center\""
								},
								{
									"id": 35,
									"name": "alignItems",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/Utils/CommonStyle/CommonStyle.ts",
											"line": 11,
											"character": 14
										}
									],
									"type": {
										"type": "stringLiteral",
										"value": "center"
									},
									"defaultValue": "\"center\""
								},
								{
									"id": 33,
									"name": "justifyContent",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/Utils/CommonStyle/CommonStyle.ts",
											"line": 9,
											"character": 18
										}
									],
									"type": {
										"type": "stringLiteral",
										"value": "center"
									},
									"defaultValue": "\"center\""
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										34,
										35,
										33
									]
								}
							],
							"sources": [
								{
									"fileName": "src/Utils/CommonStyle/CommonStyle.ts",
									"line": 8,
									"character": 15
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 30,
							"name": "containerStyle",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 31,
									"name": "flex",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/Utils/CommonStyle/CommonStyle.ts",
											"line": 5,
											"character": 8
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "1"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										31
									]
								}
							],
							"sources": [
								{
									"fileName": "src/Utils/CommonStyle/CommonStyle.ts",
									"line": 4,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								32,
								30
							]
						}
					]
				}
			},
			"defaultValue": "StyleSheet.create({\n  containerStyle: {\n    flex: 1,\n  },\n\n  centerContent: {\n    justifyContent: 'center',\n    alignContent: 'center',\n    alignItems: 'center',\n  },\n})"
		},
		{
			"id": 226,
			"name": "RootStack",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/Navigation/Navigation.tsx",
					"line": 10,
					"character": 15
				}
			],
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"id": 1,
						"name": "RootStackType"
					},
					{
						"type": "reference",
						"name": "StackNavigationState"
					},
					{
						"type": "reference",
						"name": "StackNavigationOptions"
					},
					{
						"type": "reference",
						"name": "StackNavigationEventMap"
					},
					{
						"type": "reference",
						"name": "StackNavigator"
					}
				],
				"name": "TypedNavigator"
			},
			"defaultValue": "createStackNavigator<RootStackType>()"
		},
		{
			"id": 39,
			"name": "ScreenHeight",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "src/Utils/Dimension/Dimension.ts",
					"line": 3,
					"character": 47
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "number"
			}
		},
		{
			"id": 38,
			"name": "ScreenWidth",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "src/Utils/Dimension/Dimension.ts",
					"line": 3,
					"character": 25
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "number"
			}
		},
		{
			"id": 36,
			"name": "abc",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/Utils/Images/Images.tsx",
					"line": 1,
					"character": 16
				}
			],
			"type": {
				"type": "stringLiteral",
				"value": "abc"
			},
			"defaultValue": "\"abc\""
		},
		{
			"id": 37,
			"name": "abcd",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/Utils/Images/Images.tsx",
					"line": 2,
					"character": 17
				}
			],
			"type": {
				"type": "stringLiteral",
				"value": "abc"
			},
			"defaultValue": "\"abc\""
		},
		{
			"id": 363,
			"name": "abd",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/Utils/Constants/ModalEnum.ts",
					"line": 2,
					"character": 16
				}
			],
			"type": {
				"type": "stringLiteral",
				"value": "abd"
			},
			"defaultValue": "\"abd\""
		},
		{
			"id": 351,
			"name": "addSorting",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "coverage/lcov-report/sorter.js",
					"line": 2,
					"character": 14
				}
			],
			"type": {
				"type": "reference",
				"name": "(Anonymous function)"
			},
			"defaultValue": "(function() {\n    'use strict';\n    var cols,\n        currentSort = {\n            index: 0,\n            desc: false\n        };\n\n    // returns the summary table element\n    function getTable() {\n        return document.querySelector('.coverage-summary');\n    }\n    // returns the thead element of the summary table\n    function getTableHeader() {\n        return getTable().querySelector('thead tr');\n    }\n    // returns the tbody element of the summary table\n    function getTableBody() {\n        return getTable().querySelector('tbody');\n    }\n    // returns the th element for nth column\n    function getNthColumn(n) {\n        return getTableHeader().querySelectorAll('th')[n];\n    }\n\n    // loads all columns\n    function loadColumns() {\n        var colNodes = getTableHeader().querySelectorAll('th'),\n            colNode,\n            cols = [],\n            col,\n            i;\n\n        for (i = 0; i < colNodes.length; i += 1) {\n            colNode = colNodes[i];\n            col = {\n                key: colNode.getAttribute('data-col'),\n                sortable: !colNode.getAttribute('data-nosort'),\n                type: colNode.getAttribute('data-type') || 'string'\n            };\n            cols.push(col);\n            if (col.sortable) {\n                col.defaultDescSort = col.type === 'number';\n                colNode.innerHTML =\n                    colNode.innerHTML + '<span class=\"sorter\"></span>';\n            }\n        }\n        return cols;\n    }\n    // attaches a data attribute to every tr element with an object\n    // of data values keyed by column name\n    function loadRowData(tableRow) {\n        var tableCols = tableRow.querySelectorAll('td'),\n            colNode,\n            col,\n            data = {},\n            i,\n            val;\n        for (i = 0; i < tableCols.length; i += 1) {\n            colNode = tableCols[i];\n            col = cols[i];\n            val = colNode.getAttribute('data-value');\n            if (col.type === 'number') {\n                val = Number(val);\n            }\n            data[col.key] = val;\n        }\n        return data;\n    }\n    // loads all row data\n    function loadData() {\n        var rows = getTableBody().querySelectorAll('tr'),\n            i;\n\n        for (i = 0; i < rows.length; i += 1) {\n            rows[i].data = loadRowData(rows[i]);\n        }\n    }\n    // sorts the table using the data for the ith column\n    function sortByIndex(index, desc) {\n        var key = cols[index].key,\n            sorter = function(a, b) {\n                a = a.data[key];\n                b = b.data[key];\n                return a < b ? -1 : a > b ? 1 : 0;\n            },\n            finalSorter = sorter,\n            tableBody = document.querySelector('.coverage-summary tbody'),\n            rowNodes = tableBody.querySelectorAll('tr'),\n            rows = [],\n            i;\n\n        if (desc) {\n            finalSorter = function(a, b) {\n                return -1 * sorter(a, b);\n            };\n        }\n\n        for (i = 0; i < rowNodes.length; i += 1) {\n            rows.push(rowNodes[i]);\n            tableBody.removeChild(rowNodes[i]);\n        }\n\n        rows.sort(finalSorter);\n\n        for (i = 0; i < rows.length; i += 1) {\n            tableBody.appendChild(rows[i]);\n        }\n    }\n    // removes sort indicators for current column being sorted\n    function removeSortIndicators() {\n        var col = getNthColumn(currentSort.index),\n            cls = col.className;\n\n        cls = cls.replace(/ sorted$/, '').replace(/ sorted-desc$/, '');\n        col.className = cls;\n    }\n    // adds sort indicators for current column being sorted\n    function addSortIndicators() {\n        getNthColumn(currentSort.index).className += currentSort.desc\n            ? ' sorted-desc'\n            : ' sorted';\n    }\n    // adds event listeners for all sorter widgets\n    function enableUI() {\n        var i,\n            el,\n            ithSorter = function ithSorter(i) {\n                var col = cols[i];\n\n                return function() {\n                    var desc = col.defaultDescSort;\n\n                    if (currentSort.index === i) {\n                        desc = !currentSort.desc;\n                    }\n                    sortByIndex(i, desc);\n                    removeSortIndicators();\n                    currentSort.index = i;\n                    currentSort.desc = desc;\n                    addSortIndicators();\n                };\n            };\n        for (i = 0; i < cols.length; i += 1) {\n            if (cols[i].sortable) {\n                // add the click event handler on the th so users\n                // dont have to click on those tiny arrows\n                el = getNthColumn(i).querySelector('.sorter').parentElement;\n                if (el.addEventListener) {\n                    el.addEventListener('click', ithSorter(i));\n                } else {\n                    el.attachEvent('onclick', ithSorter(i));\n                }\n            }\n        }\n    }\n    // adds sorting functionality to the UI\n    return function() {\n        if (!getTable()) {\n            return;\n        }\n        cols = loadColumns();\n        loadData();\n        addSortIndicators();\n        enableUI();\n    };\n})()"
		},
		{
			"id": 350,
			"name": "jumpToCode",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "coverage/lcov-report/block-navigation.js",
					"line": 2,
					"character": 14
				}
			],
			"type": {
				"type": "reference",
				"name": "jump"
			},
			"defaultValue": "(function init() {\n    // Classes of code we would like to highlight in the file view\n    var missingCoverageClasses = ['.cbranch-no', '.cstat-no', '.fstat-no'];\n\n    // Elements to highlight in the file listing view\n    var fileListingElements = ['td.pct.low'];\n\n    // We don't want to select elements that are direct descendants of another match\n    var notSelector = ':not(' + missingCoverageClasses.join('):not(') + ') > '; // becomes `:not(a):not(b) > `\n\n    // Selecter that finds elements on the page to which we can jump\n    var selector =\n        fileListingElements.join(', ') +\n        ', ' +\n        notSelector +\n        missingCoverageClasses.join(', ' + notSelector); // becomes `:not(a):not(b) > a, :not(a):not(b) > b`\n\n    // The NodeList of matching elements\n    var missingCoverageElements = document.querySelectorAll(selector);\n\n    var currentIndex;\n\n    function toggleClass(index) {\n        missingCoverageElements\n            .item(currentIndex)\n            .classList.remove('highlighted');\n        missingCoverageElements.item(index).classList.add('highlighted');\n    }\n\n    function makeCurrent(index) {\n        toggleClass(index);\n        currentIndex = index;\n        missingCoverageElements.item(index).scrollIntoView({\n            behavior: 'smooth',\n            block: 'center',\n            inline: 'center'\n        });\n    }\n\n    function goToPrevious() {\n        var nextIndex = 0;\n        if (typeof currentIndex !== 'number' || currentIndex === 0) {\n            nextIndex = missingCoverageElements.length - 1;\n        } else if (missingCoverageElements.length > 1) {\n            nextIndex = currentIndex - 1;\n        }\n\n        makeCurrent(nextIndex);\n    }\n\n    function goToNext() {\n        var nextIndex = 0;\n\n        if (\n            typeof currentIndex === 'number' &&\n            currentIndex < missingCoverageElements.length - 1\n        ) {\n            nextIndex = currentIndex + 1;\n        }\n\n        makeCurrent(nextIndex);\n    }\n\n    return function jump(event) {\n        switch (event.which) {\n            case 78: // n\n            case 74: // j\n                goToNext();\n                break;\n            case 66: // b\n            case 75: // k\n            case 80: // p\n                goToPrevious();\n                break;\n        }\n    };\n})()"
		},
		{
			"id": 349,
			"name": "sonarqubeScanner",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "sonar-project.js",
					"line": 1,
					"character": 22
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "any"
			},
			"defaultValue": "require('sonarqube-scanner')"
		},
		{
			"id": 352,
			"name": "styles",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "src/Screens/SplashScreen/styles.ts",
					"line": 3,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 353,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 354,
							"name": "containerStyle",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/Screens/SplashScreen/styles.ts",
									"line": 4,
									"character": 16
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 355,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									}
								}
							}
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								354
							]
						}
					]
				}
			},
			"defaultValue": "StyleSheet.create({\n  containerStyle: {},\n})"
		},
		{
			"id": 229,
			"name": "Navigation",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 230,
					"name": "Navigation",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"type": {
						"type": "reference",
						"name": "Element"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/Navigation/Navigation.tsx",
					"line": 20,
					"character": 16
				}
			]
		},
		{
			"id": 47,
			"name": "dummy",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 48,
					"name": "dummy",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/Utils/HelperFunctions/HelperFunctions.ts",
					"line": 11,
					"character": 21
				}
			]
		},
		{
			"id": 43,
			"name": "resetStack",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 44,
					"name": "resetStack",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 45,
							"name": "routeName",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 46,
							"name": "params",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Action"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/Utils/HelperFunctions/HelperFunctions.ts",
					"line": 3,
					"character": 26
				}
			]
		},
		{
			"id": 364,
			"name": "strings",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 365,
					"name": "strings",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"parameters": [
						{
							"id": 366,
							"name": "name",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 367,
							"name": "parameter",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"sources": [
				{
					"fileName": "src/Utils/Localization/i18n.ts",
					"line": 15,
					"character": 16
				}
			]
		},
		{
			"id": 235,
			"name": "Configuration",
			"kind": 2097152,
			"kindString": "Object literal",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"children": [
				{
					"id": 260,
					"name": "Production",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 261,
							"name": "AWS",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 262,
									"name": "identityPoolId",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "AppConfiguration.ts",
											"line": 50,
											"character": 20
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"us-west-2:a06f9221-e200-41d0-a30f-f6326dbfb95c\""
								},
								{
									"id": 263,
									"name": "region",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "AppConfiguration.ts",
											"line": 51,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"us-west-2\""
								},
								{
									"id": 264,
									"name": "userPoolId",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "AppConfiguration.ts",
											"line": 52,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"us-west-2_nGnLeWv8L\""
								},
								{
									"id": 265,
									"name": "userPoolWebClientId",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "AppConfiguration.ts",
											"line": 53,
											"character": 25
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"4o8too79cfntq3qoti8bl9tpnk\""
								},
								{
									"id": 266,
									"name": "oauth",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 267,
											"name": "domain",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "AppConfiguration.ts",
													"line": 56,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"headstart.auth.us-west-2.amazoncognito.com\""
										},
										{
											"id": 269,
											"name": "redirectSignIn",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "AppConfiguration.ts",
													"line": 64,
													"character": 22
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"myapp://\""
										},
										{
											"id": 270,
											"name": "redirectSignOut",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "AppConfiguration.ts",
													"line": 65,
													"character": 23
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"myapp://\""
										},
										{
											"id": 271,
											"name": "responseType",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "AppConfiguration.ts",
													"line": 66,
													"character": 20
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"code\""
										},
										{
											"id": 268,
											"name": "scope",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "AppConfiguration.ts",
													"line": 57,
													"character": 13
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"defaultValue": "[\n          'phone',\n          'email',\n          'profile',\n          'openid',\n          'aws.cognito.signin.user.admin',\n        ]"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												267,
												269,
												270,
												271,
												268
											]
										}
									],
									"sources": [
										{
											"fileName": "AppConfiguration.ts",
											"line": 55,
											"character": 11
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										262,
										263,
										264,
										265
									]
								},
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										266
									]
								}
							],
							"sources": [
								{
									"fileName": "AppConfiguration.ts",
									"line": 49,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								261
							]
						}
					],
					"sources": [
						{
							"fileName": "AppConfiguration.ts",
							"line": 48,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 248,
					"name": "Stagging",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 249,
							"name": "AWS",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 250,
									"name": "identityPoolId",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "AppConfiguration.ts",
											"line": 27,
											"character": 20
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"us-west-2:a06f9221-e200-41d0-a30f-f6326dbfb95c\""
								},
								{
									"id": 251,
									"name": "region",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "AppConfiguration.ts",
											"line": 28,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"us-west-2\""
								},
								{
									"id": 252,
									"name": "userPoolId",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "AppConfiguration.ts",
											"line": 29,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"us-west-2_nGnLeWv8L\""
								},
								{
									"id": 253,
									"name": "userPoolWebClientId",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "AppConfiguration.ts",
											"line": 30,
											"character": 25
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"4o8too79cfntq3qoti8bl9tpnk\""
								},
								{
									"id": 254,
									"name": "oauth",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 255,
											"name": "domain",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "AppConfiguration.ts",
													"line": 33,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"headstart.auth.us-west-2.amazoncognito.com\""
										},
										{
											"id": 257,
											"name": "redirectSignIn",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "AppConfiguration.ts",
													"line": 41,
													"character": 22
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"myapp://\""
										},
										{
											"id": 258,
											"name": "redirectSignOut",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "AppConfiguration.ts",
													"line": 42,
													"character": 23
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"myapp://\""
										},
										{
											"id": 259,
											"name": "responseType",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "AppConfiguration.ts",
													"line": 43,
													"character": 20
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"code\""
										},
										{
											"id": 256,
											"name": "scope",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "AppConfiguration.ts",
													"line": 34,
													"character": 13
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"defaultValue": "[\n          'phone',\n          'email',\n          'profile',\n          'openid',\n          'aws.cognito.signin.user.admin',\n        ]"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												255,
												257,
												258,
												259,
												256
											]
										}
									],
									"sources": [
										{
											"fileName": "AppConfiguration.ts",
											"line": 32,
											"character": 11
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										250,
										251,
										252,
										253
									]
								},
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										254
									]
								}
							],
							"sources": [
								{
									"fileName": "AppConfiguration.ts",
									"line": 26,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								249
							]
						}
					],
					"sources": [
						{
							"fileName": "AppConfiguration.ts",
							"line": 25,
							"character": 10
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 236,
					"name": "Testing",
					"kind": 2097152,
					"kindString": "Object literal",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 237,
							"name": "AWS",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 238,
									"name": "identityPoolId",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "AppConfiguration.ts",
											"line": 4,
											"character": 20
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"us-west-2:800823782926\""
								},
								{
									"id": 239,
									"name": "region",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "AppConfiguration.ts",
											"line": 5,
											"character": 12
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"us-west-2\""
								},
								{
									"id": 240,
									"name": "userPoolId",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "AppConfiguration.ts",
											"line": 6,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"us-west-2_NT53GSxvt\""
								},
								{
									"id": 241,
									"name": "userPoolWebClientId",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "AppConfiguration.ts",
											"line": 7,
											"character": 25
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"2ohsq40l3qdij61450npgbdg96\""
								},
								{
									"id": 242,
									"name": "oauth",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 243,
											"name": "domain",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "AppConfiguration.ts",
													"line": 10,
													"character": 14
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"qewd-infra-test-user.auth.us-west-2.amazoncognito.com\""
										},
										{
											"id": 245,
											"name": "redirectSignIn",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "AppConfiguration.ts",
													"line": 18,
													"character": 22
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"myapp://\""
										},
										{
											"id": 246,
											"name": "redirectSignOut",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "AppConfiguration.ts",
													"line": 19,
													"character": 23
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"myapp://\""
										},
										{
											"id": 247,
											"name": "responseType",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "AppConfiguration.ts",
													"line": 20,
													"character": 20
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"code\""
										},
										{
											"id": 244,
											"name": "scope",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "AppConfiguration.ts",
													"line": 11,
													"character": 13
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"defaultValue": "[\n          'phone',\n          'email',\n          'profile',\n          'openid',\n          'aws.cognito.signin.user.admin',\n        ]"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												243,
												245,
												246,
												247,
												244
											]
										}
									],
									"sources": [
										{
											"fileName": "AppConfiguration.ts",
											"line": 9,
											"character": 11
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										238,
										239,
										240,
										241
									]
								},
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										242
									]
								}
							],
							"sources": [
								{
									"fileName": "AppConfiguration.ts",
									"line": 3,
									"character": 7
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								237
							]
						}
					],
					"sources": [
						{
							"fileName": "AppConfiguration.ts",
							"line": 2,
							"character": 9
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"groups": [
				{
					"title": "Object literals",
					"kind": 2097152,
					"children": [
						260,
						248,
						236
					]
				}
			],
			"sources": [
				{
					"fileName": "AppConfiguration.ts",
					"line": 1,
					"character": 19
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "object"
			}
		},
		{
			"id": 358,
			"name": "DarkTheme",
			"kind": 2097152,
			"kindString": "Object literal",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"children": [
				{
					"id": 359,
					"name": "BackgroundColor",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/Utils/Constants/Colors.ts",
							"line": 6,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"#303030\""
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						359
					]
				}
			],
			"sources": [
				{
					"fileName": "src/Utils/Constants/Colors.ts",
					"line": 5,
					"character": 22
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "object"
			}
		},
		{
			"id": 40,
			"name": "Dimension",
			"kind": 2097152,
			"kindString": "Object literal",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"children": [
				{
					"id": 42,
					"name": "ScreenHeight",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/Utils/Dimension/Dimension.ts",
							"line": 7,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 41,
					"name": "ScreenWidth",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/Utils/Dimension/Dimension.ts",
							"line": 6,
							"character": 13
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						42,
						41
					]
				}
			],
			"sources": [
				{
					"fileName": "src/Utils/Dimension/Dimension.ts",
					"line": 5,
					"character": 15
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "object"
			}
		},
		{
			"id": 360,
			"name": "LightTheme",
			"kind": 2097152,
			"kindString": "Object literal",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"children": [
				{
					"id": 361,
					"name": "BackgroundColor",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/Utils/Constants/Colors.ts",
							"line": 10,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"white\""
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						361
					]
				}
			],
			"sources": [
				{
					"fileName": "src/Utils/Constants/Colors.ts",
					"line": 9,
					"character": 23
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "object"
			}
		},
		{
			"id": 49,
			"name": "R",
			"kind": 2097152,
			"kindString": "Object literal",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"children": [
				{
					"id": 50,
					"name": "CommontStyle",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/Utils/R.ts",
							"line": 7,
							"character": 14
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 51,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 54,
									"name": "centerContent",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 56,
											"name": "alignContent",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/Utils/CommonStyle/CommonStyle.ts",
													"line": 10,
													"character": 16
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "center"
											},
											"defaultValue": "\"center\""
										},
										{
											"id": 57,
											"name": "alignItems",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/Utils/CommonStyle/CommonStyle.ts",
													"line": 11,
													"character": 14
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "center"
											},
											"defaultValue": "\"center\""
										},
										{
											"id": 55,
											"name": "justifyContent",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/Utils/CommonStyle/CommonStyle.ts",
													"line": 9,
													"character": 18
												}
											],
											"type": {
												"type": "stringLiteral",
												"value": "center"
											},
											"defaultValue": "\"center\""
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												56,
												57,
												55
											]
										}
									],
									"sources": [
										{
											"fileName": "src/Utils/CommonStyle/CommonStyle.ts",
											"line": 8,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 52,
									"name": "containerStyle",
									"kind": 2097152,
									"kindString": "Object literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 53,
											"name": "flex",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/Utils/CommonStyle/CommonStyle.ts",
													"line": 5,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "1"
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												53
											]
										}
									],
									"sources": [
										{
											"fileName": "src/Utils/CommonStyle/CommonStyle.ts",
											"line": 4,
											"character": 16
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Object literals",
									"kind": 2097152,
									"children": [
										54,
										52
									]
								}
							]
						}
					}
				},
				{
					"id": 59,
					"name": "Dimension",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/Utils/R.ts",
							"line": 9,
							"character": 11
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 60,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 62,
									"name": "ScreenHeight",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/Utils/Dimension/Dimension.ts",
											"line": 7,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 61,
									"name": "ScreenWidth",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/Utils/Dimension/Dimension.ts",
											"line": 6,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										62,
										61
									]
								}
							]
						}
					}
				},
				{
					"id": 63,
					"name": "HelperFunctions",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/Utils/R.ts",
							"line": 10,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"name": "\"/Users/nitishp-l/Documents/CompanyWorkspace/qewd-mobile/Qewd/src/Utils/HelperFunctions/HelperFunctions\""
					}
				},
				{
					"id": 58,
					"name": "Images",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/Utils/R.ts",
							"line": 8,
							"character": 8
						}
					],
					"type": {
						"type": "reference",
						"name": "\"/Users/nitishp-l/Documents/CompanyWorkspace/qewd-mobile/Qewd/src/Utils/Images/Images\""
					}
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						50,
						59,
						63,
						58
					]
				}
			],
			"sources": [
				{
					"fileName": "src/Utils/R.ts",
					"line": 6,
					"character": 7
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "object"
			}
		}
	],
	"groups": [
		{
			"title": "Enumerations",
			"kind": 4,
			"children": [
				362
			]
		},
		{
			"title": "Classes",
			"kind": 128,
			"children": [
				227,
				149,
				68
			]
		},
		{
			"title": "Interfaces",
			"kind": 256,
			"children": [
				356,
				64,
				67
			]
		},
		{
			"title": "Type aliases",
			"kind": 4194304,
			"children": [
				231,
				23,
				6,
				26,
				27,
				17,
				18,
				21,
				22,
				1,
				19,
				20,
				15,
				16
			]
		},
		{
			"title": "Variables",
			"kind": 32,
			"children": [
				234,
				225,
				28,
				226,
				39,
				38,
				36,
				37,
				363,
				351,
				350,
				349,
				352
			]
		},
		{
			"title": "Functions",
			"kind": 64,
			"children": [
				229,
				47,
				43,
				364
			]
		},
		{
			"title": "Object literals",
			"kind": 2097152,
			"children": [
				235,
				358,
				40,
				360,
				49
			]
		}
	]
}